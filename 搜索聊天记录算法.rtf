{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green128\blue0;\red43\green131\blue159;\red0\green0\blue255;
\red163\green21\blue21;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14400\viewh11400\viewkind0
\deftab674
\pard\tx674\pardeftab674\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \CocoaLigature0 /**\
 *  
\f1 \'b2\'e9\'d1\'af\'c1\'c4\'cc\'ec\'bc\'c7\'c2\'bc
\f0  
\f1 \'b1\'bb\'e4\'d6\'c8\'be\'cc\'d8\'b6\'a8\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
 *\
 *  @param content  
\f1 \'cd\'ea\'d5\'fb\'b5\'c4\'c1\'c4\'cc\'ec\'c4\'da\'c8\'dd
\f0 \
 *  @param drawText 
\f1 \'d2\'aa\'b2\'e9\'d5\'d2\'b5\'c4\'c1\'c4\'cc\'ec\'c4\'da\'c8\'dd\'b5\'c4\'d7\'d3\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
 *  @param theShowCharaterNumbers 
\f1 \'d2\'bb\'d0\'d0\'d2\'aa\'b6\'e0\'c9\'d9\'b8\'f6\'bf\'c9\'d2\'d4\'bf\'b4\'b5\'bd\'b5\'c4\'ce\'c4\'d7\'d6\'c6\'e4\'cb\'fc\'b5\'c4\'ca\'a1\'c2\'d4\'ba\'c5
\f0 \
 *  @return 
\f1 \'e4\'d6\'c8\'be\'b5\'c4\'bd\'e1\'b9\'fb
\f0 \
 */\cf0 \
\
+ (\cf3 NSMutableAttributedString\cf0  *)theContent:(\cf3 NSString\cf0  *)content drawStr:(\cf3 NSString\cf0  *)drawText theShowCharaterNumbers:(\cf3 NSInteger\cf0 )charaterNumbers\{\
    \cf2 //
\f1 \'b2\'e9\'d5\'d2\'d7\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'ce\'bb\'d6\'c3
\f0 \cf0 \
    \cf3 NSRange\cf0  range = [content \cf3 rangeOfString\cf0 :drawText];\
    \cf3 NSMutableAttributedString\cf0  *attributeStr = \cf4 nil\cf0 ;\
    \cf2 //
\f1 \'c8\'e7\'b9\'fb\'d5\'fb\'cc\'f5\'c1\'c4\'cc\'ec\'bc\'c7\'c2\'bc\'b5\'c4\'b3\'a4\'b6\'c8\'d0\'a1\'d3\'da\'c6\'c1\'c4\'bb\'bf\'c9\'d2\'d4\'d5\'b9\'ca\'be\'b5\'c4\'b3\'a4\'b6\'c8
\f0  
\f1 \'d4\'f2\'d5\'fb\'cc\'f5\'cf\'fb\'ca\'a7
\f0 \cf0 \
    \cf4 if\cf0  (content.\cf3 length\cf0   <= charaterNumbers) \{\
        attributeStr = [[\cf3 NSMutableAttributedString\cf0  \cf3 alloc\cf0 ] \cf3 initWithString\cf0 :content];\
        \cf2 //
\f1 \'e4\'d6\'c8\'be\'d7\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'d7\'d6\'cc\'e5\'d1\'d5\'c9\'ab
\f0 \cf0 \
        [attributeStr \cf3 addAttribute\cf0 :\cf3 NSForegroundColorAttributeName\cf0  \cf3 value\cf0 :[\cf3 UIColor\cf0  \cf3 greenThemeColor\cf0 ] \cf3 range\cf0 :range];\
        \cf4 return\cf0  attributeStr;\
    \} \cf4 else\cf0 \{\
        \cf2 /* 
\f1 \'e4\'d6\'c8\'be\'b9\'e6\'d4\'f2
\f0 :
\f1 \'c1\'c4\'cc\'ec\'bc\'c7\'c2\'bc\'cf\'d4\'ca\'be\'ca\'c7\'d2\'d4\'d2\'aa\'e4\'d6\'c8\'be\'b5\'c4\'b2\'bf\'b7\'d6\'ce\'aa\'b1\'ea\'d7\'bc
\f0  
\f1 \'e4\'d6\'c8\'be\'b2\'bf\'b7\'d6
\f0  
\f1 \'c7\'b0\'d2\'aa\'b1\'a3\'c1\'f4
\f0 8
\f1 \'b8\'f6\'d7\'d6\'b7\'fb
\f0  
\f1 \'ba\'f3\'b2\'bf\'b7\'d6\'b1\'a3\'c1\'f4\'d7\'d6\'b7\'fb\'b8\'f6\'ca\'fd\'ce\'de\'d2\'aa\'c7\'f3
\f0 \
         1
\f1 \'a1\'a2\'e4\'d6\'c8\'be\'b2\'bf\'b7\'d6\'c7\'b0\'b0\'eb\'b2\'bf\'b7\'d6\'b2\'bb\'b9\'bb
\f0 8
\f1 \'b8\'f6\'b5\'c4\'a3\'ac\'d4\'f2\'b1\'a3\'c1\'f4\'c7\'b0\'b5\'c4\'cb\'f9\'d3\'d0\'d7\'d6\'cc\'e5\'cf\'f2\'e4\'d6\'c8\'be\'b2\'bf\'b7\'d6\'ba\'f3\'c8\'a5\'d7\'e3\'b9\'bb\'b5\'c4\'d7\'d6\'cc\'e5
\f0 \
         2
\f1 \'a1\'a2
\f0 */\cf0 \
        \cf4 if\cf0  (range.\cf3 location\cf0 +range.\cf3 length\cf0  > charaterNumbers) \{\cf2 //
\f1 \'d4\'f2\'b4\'d3\'c7\'b0\'c3\'e6\'bd\'d8\'c8\'a1
\f0 8
\f1 \'b8\'f6\'d7\'d6\'b7\'fb
\f0 \cf0 \
            \
            \cf3 NSInteger\cf0  number = range.\cf3 length\cf0  + range.\cf3 location\cf0  - charaterNumbers;\cf2 //
\f1 \'c7\'b0\'b2\'bf\'b7\'d6\'cf\'d4\'ca\'be
\f0 8
\f1 \'b8\'f6\'d7\'d6\'b7\'fb\'bb\'b9\'b6\'e0\'b3\'f6\'c0\'b4\'b5\'c4\'d7\'d4\'b8\'ba\'b8\'f6\'ca\'fd
\f0 \cf0 \
            \cf4 if\cf0  (range.\cf3 location\cf0  <= 8) \{\cf2 //
\f1 \'c7\'b0\'c3\'e6\'b2\'bb\'b9\'bb\'bb\'f2\'d5\'df\'d5\'fd\'ba\'c3
\f0 8
\f1 \'b8\'f6\'d7\'d6\'b7\'fb
\f0  
\f1 \'d4\'f2\'c7\'b0\'b2\'bf\'b7\'d6\'b2\'bb\'d3\'c3\'d7\'f6\'bd\'d8\'c8\'a1\'b4\'a6\'c0\'ed
\f0  
\f1 \'cf\'f2\'ba\'f3\'d4\'d9\'d5\'d2\'b9\'bb\'d7\'e3\'b9\'bb\'b5\'c4
\f0 \cf0 \
                content = [content \cf3 substringToIndex\cf0 :range.\cf3 location\cf0  + range.\cf3 length\cf0  + number];\
                content = [content \cf3 stringByAppendingString\cf0 :\cf5 @"...."\cf0 ];\cf2 //
\f1 \'ba\'f3\'c3\'e6\'cc\'ed\'bc\'d3\'c4\'da\'c8\'dd\'ca\'a1\'c2\'d4\'b7\'fb
\f0 \cf0 \
                attributeStr = [[\cf3 NSMutableAttributedString\cf0  \cf3 alloc\cf0 ] \cf3 initWithString\cf0 :content];\
                range = [content \cf3 rangeOfString\cf0 :drawText];\
                \
            \} \cf4 else\cf0 \{\
                \cf2 //
\f1 \'c5\'d0\'b6\'cf\'ba\'f3\'b1\'df\'b5\'c4\'b2\'bb\'b9\'bb\'c7\'b0\'c3\'e6\'b5\'c4\'c4\'da\'c8\'dd\'b3\'e4\'d7\'e3
\f0 \cf0 \
                \cf3 NSString\cf0  *tmpContent = [content \cf3 substringFromIndex\cf0 :range.\cf3 location\cf0  - 8];\
                \cf4 if\cf0  (tmpContent.\cf3 length\cf0  < charaterNumbers) \{\
                    \cf3 NSInteger\cf0  beforeNumber = charaterNumbers - tmpContent.\cf3 length\cf0 ;\
                    content = [content \cf3 substringFromIndex\cf0 :range.\cf3 location\cf0  - 8 - beforeNumber];\
                    content = [\cf3 NSString\cf0  \cf3 stringWithFormat\cf0 :\cf5 @"....%@"\cf0 ,content];\cf2 //
\f1 \'c7\'b0\'c3\'e6\'cc\'ed\'bc\'d3\'ca\'a1\'c2\'d4\'ba\'c5
\f0 \cf0 \
                    range = [content \cf3 rangeOfString\cf0 :drawText];\
                    attributeStr = [[\cf3 NSMutableAttributedString\cf0  \cf3 alloc\cf0 ] \cf3 initWithString\cf0 :content];\
                \} \cf4 else\cf0 \{\
                    content = [content \cf3 substringFromIndex\cf0 :range.\cf3 location\cf0  - 8];\
                    \cf3 NSRange\cf0  newRange = [content \cf3 rangeOfString\cf0 :drawText];\
                    \cf2 //
\f1 \'bf\'aa\'ca\'bc\'cf\'f2\'ba\'f3\'b2\'e9\'d5\'d2\'ca\'a3\'cf\'c2\'b5\'c4\'ba\'f3\'b2\'bf\'b7\'d6\'d7\'d6\'cc\'e5
\f0 \cf0 \
                    \cf3 NSInteger\cf0  numberBehind = charaterNumbers - (newRange.\cf3 location\cf0  + newRange.\cf3 length\cf0 );\
                    \cf3 NSString\cf0  *subString2 = [content \cf3 substringWithRange\cf0 :\cf3 NSMakeRange\cf0 (0, range.\cf3 location\cf0  + range.\cf3 length\cf0  +numberBehind)];\
                    subString2 = [\cf3 NSString\cf0  \cf3 stringWithFormat\cf0 :\cf5 @"....%@"\cf0 ,subString2];\cf2 //
\f1 \'c7\'b0\'c3\'e6\'cc\'ed\'bc\'d3\'ca\'a1\'c2\'d4\'ba\'c5
\f0 \cf0 \
                    range = [subString2 \cf3 rangeOfString\cf0 :drawText];\
                    attributeStr = [[\cf3 NSMutableAttributedString\cf0  \cf3 alloc\cf0 ] \cf3 initWithString\cf0 :subString2];\
\
                \}\
                \
            \}\
        \} \cf4 else\cf0  \cf4 if\cf0  (range.\cf3 location\cf0  +range.\cf3 length\cf0  < charaterNumbers)\{\cf2 // 
\f1 \'cf\'f2\'ba\'f3\'c7\'f8\'d3\'e0\'cf\'c2\'b5\'c4\'ce\'c4\'d7\'d6
\f0 \cf0 \
            \cf3 NSString\cf0  *subContent = [content \cf3 substringWithRange\cf0 :\cf3 NSMakeRange\cf0 (0, charaterNumbers)];\
            subContent = [subContent \cf3 stringByAppendingString\cf0 :\cf5 @"...."\cf0 ];\
            attributeStr = [[\cf3 NSMutableAttributedString\cf0  \cf3 alloc\cf0 ] \cf3 initWithString\cf0 :subContent];\
            range = [subContent \cf3 rangeOfString\cf0 :drawText];\
        \}\
        \
    \}\
    \cf2 //
\f1 \'e4\'d6\'c8\'be\'d7\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'d7\'d6\'cc\'e5\'d1\'d5\'c9\'ab
\f0 \cf0 \
    [attributeStr \cf3 addAttribute\cf0 :\cf3 NSForegroundColorAttributeName\cf0  \cf3 value\cf0 :[\cf3 UIColor\cf0  \cf3 greenThemeColor\cf0 ] \cf3 range\cf0 :range];\
    \cf4 return\cf0  attributeStr;\
\}\
}